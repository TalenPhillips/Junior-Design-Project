/* * * * * * * * * * * * * * * * * * * * * * * * * *
 * The Pretendo R.A.G.E. entertainment system:
 * An open-source gaming design program based on the
 * Arduino Mega (ATMEGA2560) microcontroller.
 *
 * This is the 2016 junior design project by the
 * following students: Thaddeus Gulden, Christian
 * Dickinson and Talen Phillips.
 * 
 * The project uses the following components:
 *
 * The Arduino Mega 2560 development kit
 *
 * Adafruit ST7735 TFT and the associated libraries:
 *  ----> http://www.adafruit.com/products/358
 * 
 * The Microchip MCP4901 DAC, and LM386 Audio Op-Amp
 * * * * * * * * * * * * * * * * * * * * * * * * * */

// AF: #include <Adafruit_GFX.h>    // Core graphics library
// AF: #include <Adafruit_ST7735.h> // Hardware-specific library
#include <SPI.h>
//#include <SD.h>

#include <avr/pgmspace.h>

#include <PDQ_GFX.h>      // PDQ: Core graphics library
#include "PDQ_ST7735_config.h"  // PDQ: ST7735 pins and other setup for this sketch
#include <PDQ_ST7735.h>     // PDQ: Hardware-specific driver library

PDQ_ST7735 tft;   //create LCD object (using pins in "PDQ_ST7735_config.h")

/* TFT display and SD card will share the hardware SPI interface.
 * Hardware SPI pins are specific to the Arduino board type and
 * cannot be remapped to alternate pins.  For Arduino Uno,
 * Duemilanove, etc., pin 11 = MOSI, pin 12 = MISO, pin 13 = SCK.
 */

// #define TFT_CS  10  // Chip select line for TFT display
// #define TFT_RST  9  // Reset line for TFT (or see below...)
// #define TFT_DC   8  // Data/command line for TFT

// #define SD_CS    4  // Chip select line for SD card

#define SD_CS      47
#define DAC_CS     46
#define TFT_CS     53
#define TFT_RST    49
#define TFT_DC     48  //use these for mega2560

// Screen Resolution
#define MAX_TFT_X           160
#define MAX_TFT_Y           128
// Resolution multiplier
#define MULT_X              2
#define MULT_Y              2
// Effective Resolution
#define COMP_X              (MAX_TFT_X / MULT_X)
#define COMP_Y              (MAX_TFT_Y / MULT_Y)
#define MAX_SPRITE_FRAMES   10

/* Button pins. (NOTE: These should be on one 
 * port so that their state can be transferred
 * into a register rapidly)
 */
 
#define b_up    45
#define b_dn    41
#define b_lf    43
#define b_rt    39
#define b_a    35
#define b_b    37

// Colors for bitmaps
#define Blu   0x03
#define Red   0xE0
#define Grn   0x1C

#define Ylw   0xFC
#define Vio   0xC3
#define Cyn   0x1B
#define Org   0xF4
#define Brn   0x6C

#define Blk   0x00
#define Wht   0xFF
#define LGy   0x92	// Light Gray
#define DGy   0x49	// Dark Gray

#define Inv   0x24  // defined invisible color for testing

// Use this reset pin for the shield!
//#define TFT_RST  0  // you can also connect this to the Arduino reset!

// AF: Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);

int sp_x = 80;
int sp_y = 64;

int b_reg = 0; //button poll register

int b_x, b_y, b_act;

int b_reg_p = 0;  //previous poll compare register
int dir = 0; //determines ball direction

int dir_lf, dir_rt, dir_up, dir_dn; // which button is pressed

// BITMAP structures

#define BMP_ATTR_NO_INVISIBLE   0x80
#define BMP_ATTR_DRAW_DIR_MASK  0x03
#define BMP_ATTR_DRAW_DIR_UP    0x00
#define BMP_ATTR_DRAW_DIR_CW    0x01
#define BMP_ATTR_DRAW_DIR_DN    0x02
#define BMP_ATTR_DRAW_DIR_CCW   0x03

struct BITMAP
{
    unsigned char width;
    unsigned char height;
    unsigned char invisible;
    unsigned char attributes;
    const unsigned char *BMP_ptr;
};


struct TILE
{
    BITMAP *BCKGND_ptr;
    TILE *UP_ptr;
    TILE *DN_ptr;
    TILE *LF_ptr;
    TILE *RT_ptr;    
};

#define BEHAVE_NO_MOVE      0
#define BEHAVE_DRIFT_RT     1 
#define BEHAVE_DRIFT_LT     2
#define BEHAVE_DRIFT_UP     3
#define BEHAVE_DRIFT_DN     4
#define BEHAVE_CIRCLE_CW    5
#define BEHAVE_CIRCLE_CCW   6
#define BEHAVE_BOUNCE_HORIZ 7 
#define BEHAVE_BOUNCE_VERT  8
#define BEHAVE_RANDOM       9

#define BEHAVE_STATE_INIT   0
#define BEHAVE_STATE_RT     1
#define BEHAVE_STATE_LT     2
#define BEHAVE_STATE_UP     3
#define BEHAVE_STATE_DN     4

struct SPRITE
{
    BITMAP *Array[MAX_SPRITE_FRAMES];  
    unsigned char behavior;
    unsigned char behaveState;  //Default to BEHAVE_STATE_INIT
    unsigned char curBitMap;
    unsigned char updateDelay;
    unsigned char curUpdateDelayCount;
    unsigned char movementDelay;
    unsigned char curMovementDelayCount;
    unsigned char equipIndex;
    signed char top;
    signed char left;  
    signed char minX;
    signed char maxX;  
    signed char minY;
    signed char maxY;  
};

// Mountain background bitmap
const static unsigned char mountain_bulk[204][64] PROGMEM = {
  {0x96, 0xB7, 0xB6, 0x96, 0xB6, 0xB7, 0xDB, 0xDB, 0xB6, 0xB6, 0xB6, 0xDB, 0xDB, 0xDB, 0xDB, 0xB6, 0xDB, 0xFF, 0xDB, 0xB6, 0xB6, 0xDB, 0xFF, 0xDA, 0xFB, 0xDA, 0xFB, 0xDB, 0x92, 0x72, 0x93, 0x93, 0x93, 0x97, 0x97, 
    0x4A, 0x4A, 0x4E, 0x72, 0x93, 0x6E, 0x6E, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x25, 0x01},
  {0xB7, 0xB7, 0xB6, 0xB6, 0x96, 0xB6, 0xB7, 0xDB, 0xB6, 0xB6, 0xB6, 0xDB, 0xDB, 0xDB, 0xDB, 0xB6, 0xDB, 0xFF, 0xD6, 0xB6, 0xB6, 0xDB, 0xFF, 0xDA, 0xFF, 0xDA, 0xFB, 0xDB, 0xB7, 0x72, 0x92, 0x93, 0x97, 0x97, 0xB7, 
    0x6E, 0x4A, 0x6E, 0x73, 0x93, 0x4E, 0x6E, 0x49, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x01, 0x01, 0x25, 0x05, 0x01, 0x01, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB6, 0xB6, 0xB7, 0xB7, 0xDB, 0xB6, 0xB6, 0xB6, 0xDB, 0xFB, 0xDB, 0xDB, 0xB6, 0xDB, 0xFF, 0xDB, 0xB6, 0xB6, 0xDB, 0xFF, 0xDB, 0xFF, 0xDB, 0xFB, 0xDB, 0xB7, 0x72, 0x93, 0x93, 0x97, 0x97, 0xB7, 
    0x4E, 0x4E, 0x6E, 0x93, 0x73, 0x4E, 0x6E, 0x72, 0x4A, 0x25, 0x01, 0x01, 0x01, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x01, 0x25, 0x05, 0x25, 0x25, 0x01, 0x01, 0x21, 0x25, 0x25},
  {0xB6, 0xB7, 0xB7, 0x97, 0x97, 0xB7, 0xB7, 0xBB, 0xB7, 0xB6, 0xB7, 0xFB, 0xDB, 0xFB, 0xD7, 0xB6, 0xDB, 0xFF, 0xDB, 0xB6, 0xB6, 0xDB, 0xFF, 0xDB, 0xFF, 0xDB, 0xFB, 0xDB, 0xB7, 0x93, 0x93, 0x93, 0x97, 0x97, 0xB7, 
    0x4E, 0x4E, 0x72, 0x93, 0x4E, 0x4E, 0x6E, 0x73, 0x97, 0x97, 0x4E, 0x01, 0x01, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x01, 0x01, 0x25, 0x25, 0x25},
  {0xB6, 0xB7, 0xB6, 0x96, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB6, 0xB7, 0xFB, 0xDB, 0xFB, 0xDB, 0xB6, 0xDB, 0xFF, 0xDB, 0xB6, 0xB6, 0xDB, 0xFF, 0xDB, 0xFF, 0xDB, 0xDB, 0xBB, 0x93, 0x93, 0x97, 0x93, 0x93, 0x97, 0xB7, 
    0x92, 0x6E, 0x72, 0x93, 0x4A, 0x4E, 0x6E, 0x72, 0x93, 0x97, 0xB7, 0x25, 0x01, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x01, 0x25, 0x21, 0x25, 0x01, 0x25, 0x25},
  {0x96, 0xB7, 0xB6, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xD7, 0xFB, 0xFB, 0xDB, 0xBB, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xFB, 0xFB, 0xDB, 0x97, 0x72, 0x93, 0x93, 0x93, 0x93, 0x97, 0x97, 
    0x4E, 0x6E, 0x72, 0x72, 0x4A, 0x4E, 0x6E, 0x72, 0x93, 0x97, 0x92, 0x4A, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB6, 0x97, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xDB, 0xFB, 0xDB, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x97, 0x97, 
    0x4E, 0x6E, 0x73, 0x6E, 0x4A, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x49, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x21, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0x96, 0xB7, 0x96, 0x97, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xDB, 0xFB, 0xDB, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x97, 0x97, 
    0x72, 0x4E, 0x72, 0x4E, 0x4A, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x25, 0x21, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0x97, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xDB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xB7, 0xBB, 0xFB, 0xFF, 0xDB, 0xDB, 0xFB, 0xDB, 0x72, 0x72, 0x72, 0x93, 0x93, 0x97, 0x97, 0x97, 
    0x97, 0x73, 0x72, 0x4A, 0x4A, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x4E, 0x01, 0x25, 0x25, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xDB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xB7, 0xBB, 0xFB, 0xFF, 0xDB, 0xDB, 0xFB, 0xDB, 0x92, 0x72, 0x72, 0x93, 0x93, 0x93, 0x97, 0x97, 
    0x97, 0x73, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x72, 0x25, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xFB, 0xB7, 0xB7, 0xDB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xDB, 0xFB, 0xFB, 0x72, 0x72, 0x72, 0x73, 0x93, 0x93, 0x97, 0x97, 
    0x97, 0x72, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x72, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xBB, 0xFB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xDB, 0xFB, 0xFB, 0x72, 0x72, 0x72, 0x73, 0x93, 0x93, 0x97, 0x97, 
    0x93, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x73, 0x93, 0x97, 0x4E, 0x01, 0x21, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xDB, 0xFB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xDB, 0xFB, 0xFB, 0x72, 0x72, 0x72, 0x92, 0x93, 0x93, 0x97, 0x93, 
    0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x72, 0x72, 0x73, 0x97, 0x97, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xDB, 0xFB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xFF, 0xFF, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x97, 0xB7, 
    0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x6E, 0x6E, 0x6E, 0x73, 0x97, 0x97, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xDB, 0xFB, 0xFB, 0xFB, 0xBB, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xDB, 0xB7, 0x72, 0x93, 0x73, 0x72, 0x72, 0x93, 0x97, 0x97, 0x92, 
    0x2A, 0x2A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x97, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xDB, 0xFB, 0xFB, 0xFB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xBB, 0xB7, 0xBB, 0xFB, 0xFF, 0xDB, 0xDB, 0x93, 0x72, 0x72, 0x72, 0x72, 0x73, 0x93, 0x97, 0x97, 0x6E, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x6E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x93, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xBB, 0xFB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0x92, 0x72, 0x72, 0x72, 0x72, 0x72, 0x93, 0x93, 0x97, 0x72, 0x2A, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x97, 0x6E, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x93, 0x93, 0x97, 0x6E, 0x2A, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x72, 0x25, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0x72, 0x72, 0x72, 0x93, 0x93, 0x73, 0x93, 0x93, 0x97, 0x72, 0x2A, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x72, 0x25, 0x01, 0x21, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0xB7, 0x73, 0x93, 0x93, 0x93, 0x93, 0x93, 0x93, 0x97, 0x93, 0x2A, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x6E, 0x4A, 0x05, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0x92, 0x73, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x93, 0x4A, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x6E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x72, 0x93, 0x93, 0x73, 0x93, 0x6E, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x6E, 0x4A, 0x25, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x97, 0x73, 0x72, 0x72, 0x93, 0x93, 0x72, 0x93, 0x6E, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x97, 0x4A, 0x4A, 0x2A, 0x05, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xB7, 0xBB, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x97, 0x72, 0x72, 0x72, 0x93, 0x93, 0x72, 0x93, 0x4E, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x97, 0x4A, 0x4A, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xBB, 0xBB, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x92, 0x93, 0x72, 0x72, 0x93, 0x93, 0x93, 0x72, 0x4A, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x97, 0x4A, 0x4A, 0x4E, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xFB, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x93, 0x93, 0x93, 0x97, 0x4A, 0x4A, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xDB, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x93, 0x97, 0x93, 0x4E, 0x4A, 
    0x4A, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x72, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xFB, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x93, 0x93, 0x97, 0x4E, 0x4E, 0x4A, 
    0x2A, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x72, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xFB, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x92, 0x72, 0x72, 0x92, 0x97, 0x97, 0x72, 0x4E, 0x4A, 
    0x2A, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x6E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xFF, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x72, 0x72, 0x72, 0x92, 0x92, 0x97, 0x97, 0x4E, 0x4A, 
    0x4A, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x6E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xFF, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x72, 0x72, 0x72, 0x97, 0x97, 0x93, 0x97, 0x93, 0x4A, 
    0x4A, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x73, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x29, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xFF, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x72, 0x72, 0x72, 0x97, 0x97, 0x97, 0x97, 0x97, 0x6E, 
    0x4E, 0x4E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xFF, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x92, 0x72, 0x93, 0x97, 0x92, 0x97, 0x93, 0x97, 0x93, 
    0x4E, 0x4E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x92, 0x72, 0x93, 0x93, 0x97, 0x93, 0x93, 0x97, 0x97, 
    0x72, 0x4E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0xDB, 0xDB, 0x92, 0x93, 0x72, 0x72, 0x92, 0x72, 0x93, 0x97, 0x97, 
    0x72, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x73, 0x72, 0x72, 0x93, 0x97, 0x97, 0x97, 
    0x72, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x4A, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x29, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0xDB, 0x92, 0x72, 0x72, 0x97, 0x73, 0x93, 0x93, 0x93, 0x97, 0x93, 
    0x6E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x4A, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0xB6, 0x72, 0x72, 0x73, 0x73, 0x93, 0x97, 0x93, 0x97, 0x92, 0x93, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x93, 0x93, 0x97, 0x4E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x29, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0x96, 0x72, 0x73, 0x93, 0x93, 0x93, 0x93, 0x93, 0x93, 0x72, 0x93, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x73, 0x93, 0x97, 0x6E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0x92, 0x73, 0x73, 0x93, 0x73, 0x72, 0x93, 0x93, 0x93, 0x72, 0x93, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x4E, 0x72, 0x72, 0x73, 0x93, 0x97, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB6, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x73, 0x93, 
    0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x72, 0x72, 0x92, 0x72, 0x73, 0x93, 0x97, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x92, 0x72, 0x72, 0x73, 0x72, 0x72, 0x72, 0x73, 0x93, 0x93, 0x93, 0x97, 
    0x97, 0x6E, 0x2A, 0x4A, 0x4E, 0x6E, 0x6E, 0x72, 0x93, 0x72, 0x73, 0x93, 0x97, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB6, 0x73, 0x93, 0x72, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x93, 0x93, 
    0x93, 0x4E, 0x2A, 0x4A, 0x4E, 0x72, 0x72, 0x6E, 0x93, 0x93, 0x73, 0x93, 0x97, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x97, 0x73, 0x93, 0x93, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x93, 0x93, 
    0x4E, 0x4A, 0x4A, 0x4A, 0x4E, 0x72, 0x6E, 0x4E, 0x72, 0x92, 0x93, 0x73, 0x93, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xB6, 0x72, 0x73, 0x93, 0x93, 0x73, 0x72, 0x72, 0x93, 0x93, 0x93, 0x72, 0x4A, 
    0x4A, 0x4E, 0x4E, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x93, 0x93, 0x93, 0x97, 0x72, 0x4A, 0x4A, 0x4E, 0x2A, 0x05, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0x92, 0x72, 0x93, 0x93, 0x93, 0x73, 0x73, 0x93, 0x97, 0x72, 0x4A, 0x4A, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x72, 0x93, 0x93, 0x93, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xDB, 0x72, 0x73, 0x73, 0x72, 0x72, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x93, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05, 0x05, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x72, 0x93, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x72, 0x93, 0x97, 0x97, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xDB, 0xDB, 0x92, 0x73, 0x72, 0x72, 0x93, 0x72, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x97, 0x97, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xDB, 0xB7, 0x93, 0x93, 0x73, 0x73, 0x93, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x72, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xDB, 0x97, 0x73, 0x93, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 
    0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x72, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xBB, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xFB, 0xDB, 0xB7, 0x72, 0x72, 0x73, 0x73, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 
    0x6E, 0x6E, 0x4E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x72, 0x72, 0x93, 0x97, 0x6E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x25},
  {0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFB, 0xFB, 0xFB, 0xFB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x73, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x2A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x6E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFB, 0xFB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x73, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x2A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x72, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xBB, 0xDB, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFB, 0xFB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x93, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 
    0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x73, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFB, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x73, 0x4E, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x93, 0x97, 0x72, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFF, 0xFF, 0xDB, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xB7, 0x73, 0x72, 0x4A, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x05, 0x05, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xDB, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x93, 0x72, 0x4E, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x93, 0x97, 0x97, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xDB, 0xFB, 0xFF, 0xFB, 0xDB, 0xBB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x93, 0x97, 0x97, 0x72, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xDA, 0xFB, 0xFB, 0xFB, 0xDB, 0xBB, 0xDB, 0xDB, 0xB7, 0x93, 0x93, 0x72, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x97, 0x97, 0x73, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFB, 0xDA, 0xFB, 0xFF, 0xFB, 0xDB, 0xBB, 0xDB, 0xDB, 0xB7, 0x72, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x97, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xFB, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFB, 0xDA, 0xFB, 0xFB, 0xFB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0x92, 0x93, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x97, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x29, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFB, 0xDA, 0xFB, 0xFF, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xB7, 0x93, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x97, 0x4E, 0x4A, 0x4A, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xDB, 0xDB, 0xFB, 0xFF, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0xFB, 0xB7, 0x73, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xDB, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xDB, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xFB, 0xB7, 0x73, 0x4E, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x97, 0x4E, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xBB, 0xBB, 0xDB, 0xFB, 0xDB, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x93, 0x72, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4A, 0x4E, 0x4E, 0x6E, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x97, 0x4A, 0x4A, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFF, 0xDB, 0xB7, 0xB7, 0xBB, 0xBB, 0xBB, 0xDB, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x97, 0x72, 0x73, 0x93, 0x4A, 0x4A, 0x4A, 0x4A, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x93, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05},
  {0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFF, 0xDB, 0xB7, 0xB7, 0xBB, 0xBB, 0xBB, 0xDB, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x93, 0x93, 0x73, 0x4A, 0x4A, 0x4A, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x6E, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFF, 0xDB, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xBB, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x92, 0x72, 0x72, 0x93, 0x93, 0x97, 0x4A, 0x4A, 0x4A, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x6E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x2A, 0x05, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xDB, 0xFF, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x72, 0x73, 0x93, 0x93, 0x73, 0x4E, 0x4A, 0x4A, 
    0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x6E, 0x4E, 0x4E, 0x6E, 0x72, 0x93, 0x97, 0x4E, 0x4A, 0x4A, 0x4A, 0x25, 0x05, 0x25, 0x05, 0x05, 0x05, 0x25, 0x25, 0x05, 0x25, 0x25, 0x05},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x73, 0x73, 0x93, 0x93, 0x72, 0x72, 0x4A, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x4E, 0x4E, 0x6E, 0x72, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x25, 0x25, 0x05, 0x05, 0x01, 0x05, 0x05, 0x05, 0x05, 0x05, 0x25, 0x25, 0x05},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xBB, 0x73, 0x73, 0x73, 0x93, 0x93, 0x72, 0x73, 0x4A, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x6E, 0x4E, 0x4E, 0x72, 0x93, 0x97, 0x4A, 0x4A, 0x4A, 0x01, 0x05, 0x01, 0x05, 0x05, 0x05, 0x05, 0x05, 0x25, 0x25, 0x25, 0x05, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0x93, 0x72, 0x73, 0x73, 0x93, 0x93, 0x72, 0x73, 0x4A, 0x4A, 
    0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x6E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x4E, 0x4A, 0x25, 0x01, 0x01, 0x01, 0x05, 0x05, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x05, 0x05},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0x93, 0x72, 0x73, 0x73, 0x73, 0x93, 0x73, 0x73, 0x4A, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x72, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x6E, 0x2A, 0x05, 0x01, 0x01, 0x01, 0x01, 0x05, 0x25, 0x05, 0x25, 0x01, 0x01, 0x01, 0x05, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xB6, 0x72, 0x72, 0x73, 0x73, 0x93, 0x73, 0x72, 0x4A, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x6E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x6E, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x05, 0x05, 0x05, 0x25, 0x01, 0x01, 0x01, 0x01, 0x05},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xB7, 0x93, 0x73, 0x73, 0x93, 0x97, 0x93, 0x4A, 0x4A, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x6E, 0x4E, 0x4E, 0x72, 0x93, 0x97, 0x29, 0x01, 0x01, 0x01, 0x05, 0x01, 0x01, 0x05, 0x25, 0x25, 0x01, 0x01, 0x01, 0x05, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x93, 0x73, 0x93, 0x97, 0x73, 0x4A, 0x4A, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x4E, 0x4E, 0x4E, 0x73, 0x73, 0x4E, 0x01, 0x01, 0x01, 0x01, 0x05, 0x01, 0x05, 0x25, 0x25, 0x05, 0x01, 0x25, 0x05, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x96, 0x72, 0x93, 0x93, 0x93, 0x72, 0x4A, 0x4A, 0x4A, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x6E, 0x4E, 0x4E, 0x6E, 0x73, 0x6E, 0x25, 0x01, 0x01, 0x05, 0x01, 0x05, 0x01, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xDB, 0xDB, 0x97, 0x72, 0x93, 0x93, 0x93, 0x73, 0x73, 0x4E, 0x4A, 0x4A, 
    0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x4E, 0x4E, 0x4E, 0x4A, 0x25, 0x05, 0x01, 0x01, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xDB, 0xB6, 0x72, 0x92, 0x73, 0x72, 0x73, 0x72, 0x73, 0x4E, 0x2A, 0x4A, 
    0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x6E, 0x4A, 0x4E, 0x2A, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x72, 0x6E, 0x73, 0x73, 0x4A, 0x4A, 
    0x4A, 0x4E, 0x4E, 0x72, 0x72, 0x4E, 0x4A, 0x4E, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xDB, 0xDB, 0x92, 0x6E, 0x6E, 0x72, 0x72, 0x6E, 0x72, 0x73, 0x72, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x6E, 0x72, 0x4E, 0x4A, 0x4E, 0x29, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0x72, 0x72, 0x6E, 0x72, 0x73, 0x72, 0x72, 0x73, 0x73, 0x4E, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x73, 0x4E, 0x4E, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x72, 0x93, 0x73, 0x72, 0x93, 0x93, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x72, 0x72, 0x4E, 0x4E, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x73, 0x73, 0x72, 0x72, 0x73, 0x93, 
    0x6E, 0x4A, 0x4E, 0x4E, 0x6E, 0x73, 0x6E, 0x4E, 0x25, 0x21, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0x92, 0x73, 0x73, 0x73, 0x72, 0x72, 0x73, 0x72, 0x72, 
    0x6E, 0x4A, 0x4E, 0x4E, 0x6E, 0x73, 0x73, 0x4A, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x97, 0x73, 0x73, 0x72, 0x6E, 0x72, 0x6E, 0x6E, 0x72, 
    0x73, 0x6E, 0x4A, 0x4E, 0x6E, 0x73, 0x72, 0x05, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0x97, 0x72, 0x72, 0x6E, 0x6E, 0x72, 0x6E, 0x6E, 0x72, 
    0x73, 0x73, 0x4A, 0x4E, 0x6E, 0x72, 0x25, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0x97, 0x72, 0x4E, 0x4E, 0x6E, 0x72, 0x6E, 0x6E, 0x72, 
    0x73, 0x73, 0x6E, 0x4E, 0x6E, 0x73, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0xB7, 0x4E, 0x4E, 0x6E, 0x6E, 0x72, 0x6E, 0x6E, 0x72, 
    0x73, 0x93, 0x72, 0x4E, 0x72, 0x4E, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0xB7, 0x4E, 0x4E, 0x6E, 0x6E, 0x72, 0x6E, 0x6E, 0x72, 
    0x73, 0x93, 0x6E, 0x4E, 0x72, 0x29, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0x97, 0x4E, 0x4E, 0x4E, 0x6E, 0x6E, 0x4E, 0x6E, 0x72, 
    0x73, 0x73, 0x4E, 0x4E, 0x4E, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xBB, 0xBB, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0x93, 0x4E, 0x4E, 0x4E, 0x6E, 0x6E, 0x4E, 0x6E, 0x72, 
    0x73, 0x6E, 0x4E, 0x4E, 0x01, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0xB7, 0xB7, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xBB, 0xBB, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0x92, 0x72, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x6E, 0x6E, 0x72, 
    0x73, 0x73, 0x4E, 0x25, 0x00, 0x01, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xDB, 0xBB, 0xBB, 0xBB, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0x72, 0x73, 0x6E, 0x4E, 0x4E, 0x6E, 0x6E, 0x6E, 0x6E, 0x72, 
    0x73, 0x6E, 0x4E, 0x25, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xBB, 0xBB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x72, 0x73, 0x72, 0x4E, 0x6E, 0x6E, 0x6E, 0x6E, 0x73, 
    0x73, 0x6E, 0x4E, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xBB, 0xBB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x72, 0x73, 0x73, 0x6E, 0x6E, 0x6E, 0x6E, 0x6E, 0x73, 
    0x6E, 0x4A, 0x4A, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xBB, 0xBB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x92, 0x73, 0x73, 0x73, 0x72, 0x72, 0x6E, 0x72, 0x6E, 0x73, 
    0x4A, 0x4E, 0x49, 0x25, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xBB, 0xBB, 0xBB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xB7, 0x73, 0x73, 0x73, 0x72, 0x6E, 0x6E, 0x72, 0x73, 0x73, 
    0x4A, 0x4E, 0x25, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xBB, 0xBB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x72, 0x6E, 0x72, 0x72, 0x73, 0x6E, 
    0x4A, 0x4A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xBB, 0xBB, 0xDB, 0xDB, 0xDB, 0x92, 0x72, 0x72, 0x73, 0x72, 0x6E, 0x6E, 0x72, 0x4A, 
    0x4A, 0x25, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xDB, 0xDB, 0xB7, 0x73, 0x93, 0x93, 0x73, 0x97, 0x72, 0x6E, 0x4A, 
    0x21, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xDB, 0xDB, 0xB7, 0x73, 0x93, 0x93, 0x73, 0x97, 0x72, 0x6E, 0x4A, 
    0x21, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xBB, 0xBB, 0xDB, 0xDB, 0xDB, 0x92, 0x72, 0x72, 0x73, 0x72, 0x6E, 0x6E, 0x72, 0x4A, 
    0x4A, 0x25, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xBB, 0xBB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x72, 0x6E, 0x72, 0x72, 0x73, 0x6E, 
    0x4A, 0x4A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xBB, 0xBB, 0xBB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xB7, 0x73, 0x73, 0x73, 0x72, 0x6E, 0x6E, 0x72, 0x73, 0x73, 
    0x4A, 0x4E, 0x25, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xBB, 0xBB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x92, 0x73, 0x73, 0x73, 0x72, 0x72, 0x6E, 0x72, 0x6E, 0x73, 
    0x4A, 0x4E, 0x49, 0x25, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xBB, 0xBB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x72, 0x73, 0x73, 0x6E, 0x6E, 0x6E, 0x6E, 0x6E, 0x73, 
    0x6E, 0x4A, 0x4A, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xBB, 0xBB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x72, 0x73, 0x72, 0x4E, 0x6E, 0x6E, 0x6E, 0x6E, 0x73, 
    0x73, 0x6E, 0x4E, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0x97, 0x97, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xDB, 0xBB, 0xBB, 0xBB, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0x72, 0x73, 0x6E, 0x4E, 0x4E, 0x6E, 0x6E, 0x6E, 0x6E, 0x72, 
    0x73, 0x6E, 0x4E, 0x25, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0xB7, 0xB7, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xBB, 0xBB, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0x92, 0x72, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x6E, 0x6E, 0x72, 
    0x73, 0x73, 0x4E, 0x25, 0x00, 0x01, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xBB, 0xBB, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0x93, 0x4E, 0x4E, 0x4E, 0x6E, 0x6E, 0x4E, 0x6E, 0x72, 
    0x73, 0x6E, 0x4E, 0x4E, 0x01, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0x97, 0x4E, 0x4E, 0x4E, 0x6E, 0x6E, 0x4E, 0x6E, 0x72, 
    0x73, 0x73, 0x4E, 0x4E, 0x4E, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0xB7, 0x4E, 0x4E, 0x6E, 0x6E, 0x72, 0x6E, 0x6E, 0x72, 
    0x73, 0x93, 0x6E, 0x4E, 0x72, 0x29, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0xB7, 0x4E, 0x4E, 0x6E, 0x6E, 0x72, 0x6E, 0x6E, 0x72, 
    0x73, 0x93, 0x72, 0x4E, 0x72, 0x4E, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0x97, 0x72, 0x4E, 0x4E, 0x6E, 0x72, 0x6E, 0x6E, 0x72, 
    0x73, 0x73, 0x6E, 0x4E, 0x6E, 0x73, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0x97, 0x72, 0x72, 0x6E, 0x6E, 0x72, 0x6E, 0x6E, 0x72, 
    0x73, 0x73, 0x4A, 0x4E, 0x6E, 0x72, 0x25, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x97, 0x73, 0x73, 0x72, 0x6E, 0x72, 0x6E, 0x6E, 0x72, 
    0x73, 0x6E, 0x4A, 0x4E, 0x6E, 0x73, 0x72, 0x05, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0x92, 0x73, 0x73, 0x73, 0x72, 0x72, 0x73, 0x72, 0x72, 
    0x6E, 0x4A, 0x4E, 0x4E, 0x6E, 0x73, 0x73, 0x4A, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x73, 0x73, 0x72, 0x72, 0x73, 0x93, 
    0x6E, 0x4A, 0x4E, 0x4E, 0x6E, 0x73, 0x6E, 0x4E, 0x25, 0x21, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x72, 0x93, 0x73, 0x72, 0x93, 0x93, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x72, 0x72, 0x4E, 0x4E, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xDB, 0x72, 0x72, 0x6E, 0x72, 0x73, 0x72, 0x72, 0x73, 0x73, 0x4E, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x73, 0x4E, 0x4E, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xDB, 0xDB, 0x92, 0x6E, 0x6E, 0x72, 0x72, 0x6E, 0x72, 0x73, 0x72, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x6E, 0x72, 0x4E, 0x4A, 0x4E, 0x29, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x72, 0x6E, 0x73, 0x73, 0x4A, 0x4A, 
    0x4A, 0x4E, 0x4E, 0x72, 0x72, 0x4E, 0x4A, 0x4E, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xDB, 0xB6, 0x72, 0x92, 0x73, 0x72, 0x73, 0x72, 0x73, 0x4E, 0x2A, 0x4A, 
    0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x6E, 0x4A, 0x4E, 0x2A, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xDB, 0xDB, 0x97, 0x72, 0x93, 0x93, 0x93, 0x73, 0x73, 0x4E, 0x4A, 0x4A, 
    0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x4E, 0x4E, 0x4E, 0x4A, 0x25, 0x05, 0x01, 0x01, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x96, 0x72, 0x93, 0x93, 0x93, 0x72, 0x4A, 0x4A, 0x4A, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x6E, 0x4E, 0x4E, 0x6E, 0x73, 0x6E, 0x25, 0x01, 0x01, 0x05, 0x01, 0x05, 0x01, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x93, 0x73, 0x93, 0x97, 0x73, 0x4A, 0x4A, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x4E, 0x4E, 0x4E, 0x73, 0x73, 0x4E, 0x01, 0x01, 0x01, 0x01, 0x05, 0x01, 0x05, 0x25, 0x25, 0x05, 0x01, 0x25, 0x05, 0x01, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xB7, 0x93, 0x73, 0x73, 0x93, 0x97, 0x93, 0x4A, 0x4A, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x6E, 0x4E, 0x4E, 0x72, 0x93, 0x97, 0x29, 0x01, 0x01, 0x01, 0x05, 0x01, 0x01, 0x05, 0x25, 0x25, 0x01, 0x01, 0x01, 0x05, 0x01, 0x01},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xB6, 0x72, 0x72, 0x73, 0x73, 0x93, 0x73, 0x72, 0x4A, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x6E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x6E, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x05, 0x05, 0x05, 0x25, 0x01, 0x01, 0x01, 0x01, 0x05},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0x93, 0x72, 0x73, 0x73, 0x73, 0x93, 0x73, 0x73, 0x4A, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x72, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x6E, 0x2A, 0x05, 0x01, 0x01, 0x01, 0x01, 0x05, 0x25, 0x05, 0x25, 0x01, 0x01, 0x01, 0x05, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0x93, 0x72, 0x73, 0x73, 0x93, 0x93, 0x72, 0x73, 0x4A, 0x4A, 
    0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x6E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x4E, 0x4A, 0x25, 0x01, 0x01, 0x01, 0x05, 0x05, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x05, 0x05},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xBB, 0x73, 0x73, 0x73, 0x93, 0x93, 0x72, 0x73, 0x4A, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x6E, 0x4E, 0x4E, 0x72, 0x93, 0x97, 0x4A, 0x4A, 0x4A, 0x01, 0x05, 0x01, 0x05, 0x05, 0x05, 0x05, 0x05, 0x25, 0x25, 0x25, 0x05, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x73, 0x73, 0x93, 0x93, 0x72, 0x72, 0x4A, 0x4A, 
    0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x4E, 0x4E, 0x6E, 0x72, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x25, 0x25, 0x05, 0x05, 0x01, 0x05, 0x05, 0x05, 0x05, 0x05, 0x25, 0x25, 0x05},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xDB, 0xFF, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x72, 0x73, 0x93, 0x93, 0x73, 0x4E, 0x4A, 0x4A, 
    0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x6E, 0x4E, 0x4E, 0x6E, 0x72, 0x93, 0x97, 0x4E, 0x4A, 0x4A, 0x4A, 0x25, 0x05, 0x25, 0x05, 0x05, 0x05, 0x25, 0x25, 0x05, 0x25, 0x25, 0x05},
  {0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFF, 0xDB, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xBB, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x92, 0x72, 0x72, 0x93, 0x93, 0x97, 0x4A, 0x4A, 0x4A, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x6E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x2A, 0x05, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFF, 0xDB, 0xB7, 0xB7, 0xBB, 0xBB, 0xBB, 0xDB, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x93, 0x93, 0x73, 0x4A, 0x4A, 0x4A, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x6E, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFF, 0xDB, 0xB7, 0xB7, 0xBB, 0xBB, 0xBB, 0xDB, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x97, 0x72, 0x73, 0x93, 0x4A, 0x4A, 0x4A, 0x4A, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x93, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05},
  {0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xBB, 0xBB, 0xDB, 0xFB, 0xDB, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x93, 0x72, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4A, 0x4E, 0x4E, 0x6E, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x97, 0x4A, 0x4A, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xDB, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xDB, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xFB, 0xB7, 0x73, 0x4E, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x97, 0x4E, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xDB, 0xDB, 0xFB, 0xFF, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0xFB, 0xB7, 0x73, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFB, 0xDA, 0xFB, 0xFF, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xB7, 0x93, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x97, 0x4E, 0x4A, 0x4A, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xFB, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFB, 0xDA, 0xFB, 0xFB, 0xFB, 0xDB, 0xBB, 0xDB, 0xDB, 0xDB, 0x92, 0x93, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x97, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x29, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFB, 0xDA, 0xFB, 0xFF, 0xFB, 0xDB, 0xBB, 0xDB, 0xDB, 0xB7, 0x72, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x97, 0x97, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xDA, 0xFB, 0xFB, 0xFB, 0xDB, 0xBB, 0xDB, 0xDB, 0xB7, 0x93, 0x93, 0x72, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x97, 0x97, 0x73, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xDB, 0xFB, 0xFF, 0xFB, 0xDB, 0xBB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x93, 0x97, 0x97, 0x72, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xDB, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x93, 0x72, 0x4E, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x93, 0x97, 0x97, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFF, 0xFF, 0xDB, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xB7, 0x73, 0x72, 0x4A, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x05, 0x05, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xBB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFB, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x73, 0x4E, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x93, 0x97, 0x72, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xB7, 0xB7, 0xBB, 0xDB, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFB, 0xFB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x93, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 
    0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x73, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFB, 0xFB, 0xFB, 0xFB, 0xDB, 0xDB, 0xDB, 0xDB, 0x72, 0x73, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x2A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x72, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFB, 0xFB, 0xFB, 0xFB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x73, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x2A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x6E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xBB, 0xBB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xFB, 0xDB, 0xB7, 0x72, 0x72, 0x73, 0x73, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 
    0x6E, 0x6E, 0x4E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x72, 0x72, 0x93, 0x97, 0x6E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xDB, 0x97, 0x73, 0x93, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 
    0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x72, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xDB, 0xB7, 0x93, 0x93, 0x73, 0x73, 0x93, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x72, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xDB, 0xDB, 0x92, 0x73, 0x72, 0x72, 0x93, 0x72, 0x4A, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x97, 0x97, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x72, 0x93, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x72, 0x93, 0x97, 0x97, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xDB, 0x72, 0x73, 0x73, 0x72, 0x72, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 
    0x4E, 0x4E, 0x4E, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x93, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05, 0x05, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0x92, 0x72, 0x93, 0x93, 0x93, 0x73, 0x73, 0x93, 0x97, 0x72, 0x4A, 0x4A, 
    0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x72, 0x93, 0x93, 0x93, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xB6, 0x72, 0x73, 0x93, 0x93, 0x73, 0x72, 0x72, 0x93, 0x93, 0x93, 0x72, 0x4A, 
    0x4A, 0x4E, 0x4E, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x93, 0x93, 0x93, 0x97, 0x72, 0x4A, 0x4A, 0x4E, 0x2A, 0x05, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x97, 0x73, 0x93, 0x93, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x93, 0x93, 
    0x4E, 0x4A, 0x4A, 0x4A, 0x4E, 0x72, 0x6E, 0x4E, 0x72, 0x92, 0x93, 0x73, 0x93, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB6, 0x73, 0x93, 0x72, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x93, 0x93, 
    0x93, 0x4E, 0x2A, 0x4A, 0x4E, 0x72, 0x72, 0x6E, 0x93, 0x93, 0x73, 0x93, 0x97, 0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x92, 0x72, 0x72, 0x73, 0x72, 0x72, 0x72, 0x73, 0x93, 0x93, 0x93, 0x97, 
    0x97, 0x6E, 0x2A, 0x4A, 0x4E, 0x6E, 0x6E, 0x72, 0x93, 0x72, 0x73, 0x93, 0x97, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB6, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x73, 0x93, 
    0x97, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x72, 0x72, 0x92, 0x72, 0x73, 0x93, 0x97, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0x92, 0x73, 0x73, 0x93, 0x73, 0x72, 0x93, 0x93, 0x93, 0x72, 0x93, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x4E, 0x72, 0x72, 0x73, 0x93, 0x97, 0x97, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0x96, 0x72, 0x73, 0x93, 0x93, 0x93, 0x93, 0x93, 0x93, 0x72, 0x93, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x73, 0x93, 0x97, 0x6E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0xB6, 0x72, 0x72, 0x73, 0x73, 0x93, 0x97, 0x93, 0x97, 0x92, 0x93, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x93, 0x93, 0x97, 0x4E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x29, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0xDB, 0x92, 0x72, 0x72, 0x97, 0x73, 0x93, 0x93, 0x93, 0x97, 0x93, 
    0x6E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x4A, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x73, 0x72, 0x72, 0x93, 0x97, 0x97, 0x97, 
    0x72, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x4A, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x29, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0xDB, 0xDB, 0x92, 0x93, 0x72, 0x72, 0x92, 0x72, 0x93, 0x97, 0x97, 
    0x72, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x92, 0x72, 0x93, 0x93, 0x97, 0x93, 0x93, 0x97, 0x97, 
    0x72, 0x4E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xFF, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x92, 0x72, 0x93, 0x97, 0x92, 0x97, 0x93, 0x97, 0x93, 
    0x4E, 0x4E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xBB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xFF, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x72, 0x72, 0x72, 0x97, 0x97, 0x97, 0x97, 0x97, 0x6E, 
    0x4E, 0x4E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFF, 0xFB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFB, 0xFF, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x72, 0x72, 0x72, 0x97, 0x97, 0x93, 0x97, 0x93, 0x4A, 
    0x4A, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x73, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x29, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xFB, 0xFB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xFF, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x72, 0x72, 0x72, 0x92, 0x92, 0x97, 0x97, 0x4E, 0x4A, 
    0x4A, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x6E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xFB, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x92, 0x72, 0x72, 0x92, 0x97, 0x97, 0x72, 0x4E, 0x4A, 
    0x2A, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x6E, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xFB, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x93, 0x93, 0x97, 0x4E, 0x4E, 0x4A, 
    0x2A, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x72, 0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xDB, 0xDB, 0xFF, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x93, 0x97, 0x93, 0x4E, 0x4A, 
    0x4A, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x72, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xBB, 0xDB, 0xFB, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x93, 0x93, 0x93, 0x97, 0x4A, 0x4A, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x93, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xBB, 0xBB, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x92, 0x93, 0x72, 0x72, 0x93, 0x93, 0x93, 0x72, 0x4A, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x97, 0x4A, 0x4A, 0x4E, 0x4E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xB7, 0xBB, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x97, 0x72, 0x72, 0x72, 0x93, 0x93, 0x72, 0x93, 0x4E, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x97, 0x4A, 0x4A, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0xDB, 0x97, 0x73, 0x72, 0x72, 0x93, 0x93, 0x72, 0x93, 0x6E, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x97, 0x4A, 0x4A, 0x2A, 0x05, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xDB, 0xDB, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x72, 0x93, 0x93, 0x73, 0x93, 0x6E, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x6E, 0x4A, 0x25, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xDB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0xDB, 0x92, 0x73, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x93, 0x4A, 
    0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x6E, 0x4A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0xB7, 0x73, 0x93, 0x93, 0x93, 0x93, 0x93, 0x93, 0x97, 0x93, 0x2A, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x6E, 0x4A, 0x05, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xFB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0x72, 0x72, 0x72, 0x93, 0x93, 0x73, 0x93, 0x93, 0x97, 0x72, 0x2A, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x72, 0x25, 0x01, 0x21, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x93, 0x93, 0x97, 0x6E, 0x2A, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x72, 0x25, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xBB, 0xFB, 0xFB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFF, 0xDB, 0x92, 0x72, 0x72, 0x72, 0x72, 0x72, 0x93, 0x93, 0x97, 0x72, 0x2A, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x93, 0x97, 0x6E, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xBB, 0xB7, 0xDB, 0xFB, 0xFB, 0xFB, 0xB7, 0xB7, 0xB7, 0xDB, 0xFB, 0xBB, 0xB7, 0xBB, 0xFB, 0xFF, 0xDB, 0xDB, 0x93, 0x72, 0x72, 0x72, 0x72, 0x73, 0x93, 0x97, 0x97, 0x6E, 
    0x2A, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x6E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x93, 0x2A, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xDB, 0xFB, 0xFB, 0xFB, 0xBB, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xDB, 0xB7, 0x72, 0x93, 0x73, 0x72, 0x72, 0x93, 0x97, 0x97, 0x92, 
    0x2A, 0x2A, 0x4A, 0x4E, 0x4E, 0x4E, 0x6E, 0x4E, 0x4E, 0x6E, 0x73, 0x93, 0x97, 0x97, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xDB, 0xFB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xFF, 0xFF, 0xDB, 0xDB, 0xDB, 0xB7, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x97, 0xB7, 
    0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x6E, 0x6E, 0x6E, 0x73, 0x97, 0x97, 0x4E, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xDB, 0xFB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xDB, 0xFB, 0xFB, 0x72, 0x72, 0x72, 0x92, 0x93, 0x93, 0x97, 0x93, 
    0x6E, 0x4A, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x72, 0x72, 0x73, 0x97, 0x97, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xBB, 0xFB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xDB, 0xFB, 0xFB, 0x72, 0x72, 0x72, 0x73, 0x93, 0x93, 0x97, 0x97, 
    0x93, 0x6E, 0x4A, 0x4A, 0x4E, 0x4E, 0x6E, 0x72, 0x73, 0x73, 0x93, 0x97, 0x4E, 0x01, 0x21, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xFB, 0xB7, 0xB7, 0xDB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xDB, 0xFB, 0xFB, 0x72, 0x72, 0x72, 0x73, 0x93, 0x93, 0x97, 0x97, 
    0x97, 0x72, 0x4A, 0x4A, 0x4E, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x72, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xDB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xB7, 0xBB, 0xFB, 0xFF, 0xDB, 0xDB, 0xFB, 0xDB, 0x92, 0x72, 0x72, 0x93, 0x93, 0x93, 0x97, 0x97, 
    0x97, 0x73, 0x4E, 0x4A, 0x4A, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x72, 0x25, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0x97, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xDB, 0xFF, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xB7, 0xBB, 0xFB, 0xFF, 0xDB, 0xDB, 0xFB, 0xDB, 0x72, 0x72, 0x72, 0x93, 0x93, 0x97, 0x97, 0x97, 
    0x97, 0x73, 0x72, 0x4A, 0x4A, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x4E, 0x01, 0x25, 0x25, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0x96, 0xB7, 0x96, 0x97, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xDB, 0xFB, 0xFB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xDB, 0xFB, 0xDB, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x97, 0x97, 
    0x72, 0x4E, 0x72, 0x4E, 0x4A, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x25, 0x21, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB6, 0x97, 0xB7, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xDB, 0xFB, 0xDB, 0xDB, 0xB7, 0xB7, 0xFB, 0xFF, 0xDB, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xDB, 0xFB, 0xDB, 0x72, 0x72, 0x72, 0x93, 0x93, 0x93, 0x97, 0x97, 
    0x4E, 0x6E, 0x73, 0x6E, 0x4A, 0x4E, 0x4E, 0x72, 0x73, 0x93, 0x97, 0x49, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x21, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0x96, 0xB7, 0xB6, 0x97, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xD7, 0xFB, 0xFB, 0xDB, 0xBB, 0xB7, 0xDB, 0xFF, 0xDB, 0xB7, 0xB7, 0xDB, 0xFF, 0xDB, 0xFB, 0xFB, 0xDB, 0x97, 0x72, 0x93, 0x93, 0x93, 0x93, 0x97, 0x97, 
    0x4E, 0x6E, 0x72, 0x72, 0x4A, 0x4E, 0x6E, 0x72, 0x93, 0x97, 0x92, 0x4A, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25},
  {0xB6, 0xB7, 0xB6, 0x96, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB6, 0xB7, 0xFB, 0xDB, 0xFB, 0xDB, 0xB6, 0xDB, 0xFF, 0xDB, 0xB6, 0xB6, 0xDB, 0xFF, 0xDB, 0xFF, 0xDB, 0xDB, 0xBB, 0x93, 0x93, 0x97, 0x93, 0x93, 0x97, 0xB7, 
    0x92, 0x6E, 0x72, 0x93, 0x4A, 0x4E, 0x6E, 0x72, 0x93, 0x97, 0xB7, 0x25, 0x01, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x01, 0x25, 0x21, 0x25, 0x01, 0x25, 0x25},
  {0xB6, 0xB7, 0xB7, 0x97, 0x97, 0xB7, 0xB7, 0xBB, 0xB7, 0xB6, 0xB7, 0xFB, 0xDB, 0xFB, 0xD7, 0xB6, 0xDB, 0xFF, 0xDB, 0xB6, 0xB6, 0xDB, 0xFF, 0xDB, 0xFF, 0xDB, 0xFB, 0xDB, 0xB7, 0x93, 0x93, 0x93, 0x97, 0x97, 0xB7, 
    0x4E, 0x4E, 0x72, 0x93, 0x4E, 0x4E, 0x6E, 0x73, 0x97, 0x97, 0x4E, 0x01, 0x01, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x01, 0x01, 0x25, 0x25, 0x25},
  {0xB7, 0xB7, 0xB7, 0xB6, 0xB6, 0xB7, 0xB7, 0xDB, 0xB6, 0xB6, 0xB6, 0xDB, 0xFB, 0xDB, 0xDB, 0xB6, 0xDB, 0xFF, 0xDB, 0xB6, 0xB6, 0xDB, 0xFF, 0xDB, 0xFF, 0xDB, 0xFB, 0xDB, 0xB7, 0x72, 0x93, 0x93, 0x97, 0x97, 0xB7, 
    0x4E, 0x4E, 0x6E, 0x93, 0x73, 0x4E, 0x6E, 0x72, 0x4A, 0x25, 0x01, 0x01, 0x01, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x01, 0x25, 0x05, 0x25, 0x25, 0x01, 0x01, 0x21, 0x25, 0x25},
  {0xB7, 0xB7, 0xB6, 0xB6, 0x96, 0xB6, 0xB7, 0xDB, 0xB6, 0xB6, 0xB6, 0xDB, 0xDB, 0xDB, 0xDB, 0xB6, 0xDB, 0xFF, 0xD6, 0xB6, 0xB6, 0xDB, 0xFF, 0xDA, 0xFF, 0xDA, 0xFB, 0xDB, 0xB7, 0x72, 0x92, 0x93, 0x97, 0x97, 0xB7, 
    0x6E, 0x4A, 0x6E, 0x73, 0x93, 0x4E, 0x6E, 0x49, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x01, 0x01, 0x25, 0x05, 0x01, 0x01, 0x25, 0x25, 0x25},
  {0x96, 0xB7, 0xB6, 0x96, 0xB6, 0xB7, 0xDB, 0xDB, 0xB6, 0xB6, 0xB6, 0xDB, 0xDB, 0xDB, 0xDB, 0xB6, 0xDB, 0xFF, 0xDB, 0xB6, 0xB6, 0xDB, 0xFF, 0xDA, 0xFB, 0xDA, 0xFB, 0xDB, 0x92, 0x72, 0x93, 0x93, 0x93, 0x97, 0x97, 
    0x4A, 0x4A, 0x4E, 0x72, 0x93, 0x6E, 0x6E, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x25, 0x25, 0x25, 0x25, 0x05, 0x25, 0x25, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x25, 0x01}};

BITMAP mountain = {204, 64, 0x01, BMP_ATTR_NO_INVISIBLE | BMP_ATTR_DRAW_DIR_UP, &mountain_bulk[0][0]};

TILE start_tile = {&mountain, &start_tile, &start_tile, &start_tile, &start_tile};

//Spinning sword 5x5 diagonal and straight bitmaps (translated for each cardinal direction)

const static unsigned char Sword_N_bulk[5][5] PROGMEM =     {{Inv, Inv, Inv, Inv, Inv},
                                                             {Inv, Blu, Inv, Inv, Inv},
                                                             {Blu, Blu, LGy, LGy, LGy},
                                                             {Inv, Blu, Inv, Inv, Inv},
                                                             {Inv, Inv, Inv, Inv, Inv}};
                                                         
const static unsigned char Sword_NE_bulk[5][5] PROGMEM =    {{Blu, Inv, Blu, Inv, Inv},
                                                             {Inv, Blu, Inv, Inv, Inv},
                                                             {Blu, Inv, LGy, Inv, Inv},
                                                             {Inv, Inv, Inv, LGy, Inv},
                                                             {Inv, Inv, Inv, Inv, LGy}};

// Red X and +
const static unsigned char Red_X_bulk[5][5] PROGMEM =   {{Red, Inv, Inv, Inv, Red},
                                                         {Inv, Red, Inv, Red, Inv},
                                                         {Inv, Inv, Red, Inv, Inv},
                                                         {Inv, Red, Inv, Red, Inv},
                                                         {Red, Inv, Inv, Inv, Red}};
                                                         
const static unsigned char Red_Cross_bulk[5][5] PROGMEM =   {{Inv, Inv, Red, Inv, Inv},
                                                             {Inv, Inv, Red, Inv, Inv},
                                                             {Red, Red, Red, Red, Red},
                                                             {Inv, Inv, Red, Inv, Inv},
                                                             {Inv, Inv, Red, Inv, Inv}};

// Weird jumping jacks patterns
const static unsigned char Red_dn_bulk[4][4] PROGMEM =  {{Inv, Red, Red, Inv},
                                                         {Inv, Red, Red, Inv},
                                                         {Inv, Red, Red, Inv},
                                                         {Inv, Red, Red, Inv}};
const static unsigned char Red_x_bulk[4][4] PROGMEM =   {{Red, Inv, Inv, Red},
                                                         {Inv, Red, Red, Inv},
                                                         {Inv, Red, Red, Inv},
                                                         {Red, Inv, Inv, Red}};
const static unsigned char Red_up_bulk[4][4] PROGMEM =  {{Inv, Inv, Inv, Inv},
                                                         {Red, Red, Red, Red},
                                                         {Red, Red, Red, Red},
                                                         {Inv, Inv, Inv, Inv}};
                                                                                                                  
const static unsigned char Blue_dn_bulk[4][4] PROGMEM = {{Inv, Blu, Blu, Inv},
                                                         {Inv, Blu, Blu, Inv},
                                                         {Inv, Blu, Blu, Inv},
                                                         {Inv, Blu, Blu, Inv}};
const static unsigned char Blue_x_bulk[4][4] PROGMEM =  {{Blu, Inv, Inv, Blu},
                                                         {Inv, Blu, Blu, Inv},
                                                         {Inv, Blu, Blu, Inv},
                                                         {Blu, Inv, Inv, Blu}};
const static unsigned char Blue_up_bulk[4][4] PROGMEM = {{Inv, Inv, Inv, Inv},
                                                         {Blu, Blu, Blu, Blu},
                                                         {Blu, Blu, Blu, Blu},
                                                         {Inv, Inv, Inv, Inv}};
														 
//BITMAP sprite1 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_UP, &Red_X_bulk[0][0]};
//BITMAP sprite2 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_UP, &Red_Cross_bulk[0][0]};

//BITMAP sprite1 = {4, 4, Inv, BMP_ATTR_DRAW_DIR_UP, &Red_up_bulk[0][0]};
//BITMAP sprite2 = {4, 4, Inv, BMP_ATTR_DRAW_DIR_UP, &Red_x_bulk[0][0]};
//BITMAP sprite3 = {4, 4, Inv, BMP_ATTR_DRAW_DIR_UP, &Red_dn_bulk[0][0]};
//BITMAP sprite4 = {4, 4, Inv, BMP_ATTR_DRAW_DIR_UP, &Blue_up_bulk[0][0]};
//BITMAP sprite5 = {4, 4, Inv, BMP_ATTR_DRAW_DIR_UP, &Blue_x_bulk[0][0]};
//BITMAP sprite6 = {4, 4, Inv, BMP_ATTR_DRAW_DIR_UP, &Blue_dn_bulk[0][0]};

BITMAP sprite8 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_UP, &Sword_N_bulk[0][0]};
BITMAP sprite7 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_UP, &Sword_NE_bulk[0][0]};
BITMAP sprite6 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_CCW, &Sword_N_bulk[0][0]};
BITMAP sprite5 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_CCW, &Sword_NE_bulk[0][0]};
BITMAP sprite4 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_DN, &Sword_N_bulk[0][0]};
BITMAP sprite3 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_DN, &Sword_NE_bulk[0][0]};
BITMAP sprite2 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_CW, &Sword_N_bulk[0][0]};
BITMAP sprite1 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_CW, &Sword_NE_bulk[0][0]};

/*
BITMAP sprite8 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_DN, &Sword_N_bulk[0][0]};
BITMAP sprite7 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_DN, &Sword_NE_bulk[0][0]};
BITMAP sprite6 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_DN, &Sword_E_bulk[0][0]};
BITMAP sprite5 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_DN, &Sword_SE_bulk[0][0]};
BITMAP sprite4 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_DN, &Sword_S_bulk[0][0]};
BITMAP sprite3 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_DN, &Sword_SW_bulk[0][0]};
BITMAP sprite2 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_DN, &Sword_W_bulk[0][0]};
BITMAP sprite1 = {5, 5, Inv, BMP_ATTR_DRAW_DIR_DN, &Sword_NW_bulk[0][0]};
*/

//SPRITE mySprite = {{&sprite1 , &sprite2, NULL, NULL, NULL}, 0, 5, 0, 1, 0, 0xFF, 0, 0, -128, 127, -128, 127};
//SPRITE mySprite = {{&sprite2 , &sprite1, &sprite5, &sprite4, NULL}, 0, 20, 0, 1, 0, 0xFF, 0, 0, -128, 127, -128, 127};
SPRITE mySprite = {{&sprite1 , &sprite2, &sprite3 , &sprite4, &sprite5 , &sprite6, &sprite7 , &sprite8, NULL,}, //*Array[MAX_SPRITE_FRAMES]
                    BEHAVE_DRIFT_LT, //behavior
                    BEHAVE_STATE_INIT, //behaveState
                    0,      //curBitMap
                    5,      //updateDelay
                    0,      //curUpdateDelayCount
                    1,      //movementDelay
                    0,      //curMovementDelayCount
                    0xFF,   //equipIndex
                    50,     //top
                    0,      //left
                    -2,   //minX
                    78,    //maxX
                    -128,   //minY
                    127};   //maxY


SPRITE mySprite2 = {{&sprite1 , &sprite2, &sprite3 , &sprite4, &sprite5 , &sprite6, &sprite7 , &sprite8, NULL,}, //*Array[MAX_SPRITE_FRAMES]
                    BEHAVE_DRIFT_DN, //behavior
                    BEHAVE_STATE_INIT, //behaveState
                    3,      //curBitMap
                    5,      //updateDelay
                    0,      //curUpdateDelayCount
                    1,      //movementDelay
                    0,      //curMovementDelayCount
                    0xFF,   //equipIndex
                    50,     //top
                    26,     //left
                    -2,   //minX
                    78,    //maxX
                    -2,   //minY
                    64};   //maxY

SPRITE mySprite3 = {{&sprite1 , &sprite2, &sprite3 , &sprite4, &sprite5 , &sprite6, &sprite7 , &sprite8, NULL,}, //*Array[MAX_SPRITE_FRAMES]
                    BEHAVE_DRIFT_UP, //behavior
                    BEHAVE_STATE_INIT, //behaveState
                    5,      //curBitMap
                    5,      //updateDelay
                    0,      //curUpdateDelayCount
                    1,      //movementDelay
                    0,      //curMovementDelayCount
                    0xFF,   //equipIndex
                    50,     //top
                    52,     //left
                    -2,   //minX
                    78,    //maxX
                    -2,   //minY
                    64};   //maxY


SPRITE mySprite4 = {{&sprite1 , &sprite2, &sprite3 , &sprite4, &sprite5 , &sprite6, &sprite7 , &sprite8, NULL,}, //*Array[MAX_SPRITE_FRAMES]
                    BEHAVE_CIRCLE_CW, //behavior
                    BEHAVE_STATE_INIT, //behaveState
                    5,      //curBitMap
                    5,      //updateDelay
                    0,      //curUpdateDelayCount
                    1,      //movementDelay
                    0,      //curMovementDelayCount
                    0xFF,   //equipIndex
                    20,     //top
                    10,     //left
                    20,   //minX
                    50,   //maxX
                    10,   //minY
                    40};  //maxY                    

TILE *CurTile = NULL;

//ANIMATED_SPRITE Sprite = {{&mybmp, &mybmp, &mybmp, NULL}, 0};

int16_t sprite1_x = 0;
int16_t sprite1_inc = 1;

/***************************SETUP*************************************/
void setup(void) {
	// CHANGE THIS: Put pins on one port, and use PORT[X] = [binary number]
  pinMode(b_up, INPUT);
  pinMode(b_dn, INPUT);
  pinMode(b_lf, INPUT);
  pinMode(b_rt, INPUT);
  pinMode(b_a, INPUT);
  pinMode(b_b, INPUT); //BUTTON INPUT CONFIG
  pinMode(SD_CS, OUTPUT);
  pinMode(DAC_CS, OUTPUT);
  digitalWrite(DAC_CS, HIGH);

  Serial.begin(9600);

  // Use this initializer if you're using a 1.8" TFT
  // AF: tft.initR(INITR_BLACKTAB);


#define ST7735_RST_PIN    49   //use these for mega2560

#if defined(ST7735_RST_PIN)        // reset like Adafruit does 
  FastPin<ST7735_RST_PIN>::setOutput();
  FastPin<ST7735_RST_PIN>::hi();
  FastPin<ST7735_RST_PIN>::lo();
  delay(1);
  FastPin<ST7735_RST_PIN>::hi();
#endif

  tft.begin();            // use instead of tft.initR(INITR_BLACKTAB) to initialize display for PDQ library

  //drawBackGroundA(&mountain); // draw the background
  newTile(&start_tile);

    
  cli();		//? stop interrupts

//set timer0 interrupt at 60Hz
  TCCR0A = 0;// set entire TCCR0A register to 0
  TCCR0B = 0;// same for TCCR0B
  TCNT0  = 0;//initialize counter value to 0
  // set compare match register for 60Hz increments
  OCR0A = 255;// = (16*10^6) / (60*1024) - 1 (must be <256)
  // turn on CTC mode
  TCCR0A |= (1 << WGM01);
  // Set timer config bits for 1024 prescaler
  TCCR0B |= (1 << CS02) | (0 << CS01) | (1 << CS00);   
  // enable timer compare interrupt
  TIMSK0 |= (1 << OCIE0A);

sei();//allow interrupts
}

#define butt_lf   0x01
#define butt_rt   0x02
#define butt_up   0x04
#define butt_dn   0x08
#define butt_a    0x10
#define butt_b    0x20

void loop() {
 //NOT SURE WHAT GOES HERE, PROBABLY SOME GAME LOGIC
}

//THIS ISR MEDIATES FRAME REDRAW (AND MAYBE GAME LOGIC?) AND BUTTON POLL (both at ~60Hz, so same interrupt is feasible)
ISR(TIMER0_COMPA_vect)
{
  int x;
  int y;  
  int b_reg_x;
  int b_reg_y;  

  b_x = (digitalRead(b_lf)) | (digitalRead(b_rt) << 1);
  b_y = (digitalRead(b_up) << 2) | (digitalRead(b_dn) << 3);
  b_act = (digitalRead(b_a) << 4) | (digitalRead(b_b) << 5);
  
  b_reg_x = b_x & (butt_lf | butt_rt);
  b_reg_y = b_y & (butt_up | butt_dn);  

  if (b_reg_x == 0 && b_reg_y == 0)
  {
    //tft.drawCircle(sp_y, sp_x, 10, ST7735_YELLOW); // The circle isn't moving
  }
  else
  { 
      if (b_reg_x == butt_lf) x = -1;
      else if (b_reg_x == butt_rt) x = 1;
      else x = 0;
    
      if (b_reg_y == butt_dn) y = -1;
      else if (b_reg_y == butt_up) y = 1;
      else y = 0;
    
    
        //tft.drawCircle(sp_y, sp_x, 10 , ST7735_BLACK);
    
        sp_x += x;
        sp_y += y;
        
        if(sp_x > 170) sp_x = -10; 
        if(sp_x < -10) sp_x = 170; 
        if(sp_y > 138) sp_y = -10;     
        if(sp_y < -10) sp_y = 138; 
      
        //tft.drawCircle(sp_y, sp_x, 10, ST7735_YELLOW);
        //drawSprite(76, 0, &sprite1);
    }

      updateSprite(&mySprite);
      updateSprite(&mySprite2);
      updateSprite(&mySprite3);
      updateSprite(&mySprite4);   
}

//Draws a Pixel on the Compressed 8 bit screen
//x - Compressed 8 bit screen location
//y - Compressed 8 bit screen location
//color8 - Compressed 8 bit color
void drawPixel(int16_t x, int16_t y, uint8_t color8)
{
  uint16_t color16 = ((uint16_t)(color8 & 0xE0) << 8) | ((uint16_t)(color8 & 0x1C) << 6) | ((uint16_t)(color8 & 0x03) << 3); //RRRG GGBB  to RRR0 0GGG 000B B000
  uint16_t newx = (int16_t)((x + 0) * MULT_X);
  uint16_t newy = (int16_t)((y + 0) * MULT_Y);  

  if ((newx >= 0) && (newx < MAX_TFT_X) && (newy >= 0) && (newy < MAX_TFT_Y))
  {
    tft.fillRect((MAX_TFT_Y - 1) - newy, newx, (int16_t) MULT_X, (int16_t) MULT_Y, color16); //Swapping x and y to rotate the screen
  }
}
/*
void drawMovingSprite(int16_t x, int16_t y, int16_t inc, const BITMAP *BkgndPtr, const BITMAP *SpritePtr)
{
  uint16_t newx;
  //uint16_t newy;
  uint16_t i;
  unsigned char color8;
  
  if (inc > 0)
  {
    newx = x + inc;
    if (newx > 64 - SpritePtr->width)
    {
      newx = 64 - SpritePtr->width;
      inc = -inc;
    }
  }
  else
  {
    newx = x + inc;
    if (newx <= 0)
    {
      newx = 0;
      inc = -inc;
    }
   }
   //drawSprite(newx, y, SpritePtr);

   for (i = y; i < y + SpritePtr->height; i++)
    {
      color8 = pgm_read_byte_near(BkgndPtr->ptr + (x * BkgndPtr->height) + i);
      drawPixel(x, i, color8);
    }

}

*/

void updateSprite(SPRITE *sprite_ptr)
{
  signed char incX = 0;
  signed char incY = 0;
  bool        stopReached = false;
  bool        wrapAround = false;
  unsigned char oldBitMap = sprite_ptr->curBitMap;
  unsigned char oldLeft = sprite_ptr->left;
  unsigned char oldTop = sprite_ptr->top;
  
  //Update new BitMap and Count
  sprite_ptr->curUpdateDelayCount++;
  if (sprite_ptr->curUpdateDelayCount >= sprite_ptr->updateDelay)
  {
    sprite_ptr->curUpdateDelayCount = 0;
    sprite_ptr->curBitMap++;
    if ((sprite_ptr->curBitMap >= MAX_SPRITE_FRAMES) || (sprite_ptr->Array[sprite_ptr->curBitMap] == NULL))
    {
      sprite_ptr->curBitMap = 0;
    }
  }

  //Update movementy stuff
  sprite_ptr->curMovementDelayCount++;
  if (sprite_ptr->curMovementDelayCount >= sprite_ptr->movementDelay)
  {
    sprite_ptr->curMovementDelayCount = 0;
    
    //===================================================== CHOOSE BEHAVIOR =====================================================
    // we need to move, so look at behavior
    switch(sprite_ptr->behavior)
    {
      case BEHAVE_DRIFT_RT:
        incX = 1;
        wrapAround = true;
        break;
      
      case BEHAVE_DRIFT_LT:
        incX = -1;
        wrapAround = true;
      break;
      
      case BEHAVE_DRIFT_UP:
        incY = 1;
        wrapAround = true;
      break;
      
      case BEHAVE_DRIFT_DN:
        incY = -1;   
        wrapAround = true;
      break;
      
      case BEHAVE_CIRCLE_CW:
      case BEHAVE_CIRCLE_CCW:      
        switch(sprite_ptr->behaveState)
        {
          case BEHAVE_STATE_LT:
            incX = -1;
          break;
          case BEHAVE_STATE_UP:
            incY = 1;
          break;
          case BEHAVE_STATE_DN:
            incY = -1;
          break;
          default: //BEHAVE_STATE_INIT, BEHAVE_STATE_RT
            sprite_ptr->behaveState = BEHAVE_STATE_RT;
            incX = 1;
          break;
        }
      break;

      default:  //BEHAVE_NO_MOVE:
        //do nothing
      break;      
    }

    //===================================================== DO ACTUAL MOVEMENT =====================================================
    sprite_ptr->left += incX;
    if (sprite_ptr->left < sprite_ptr->minX) 
    {
      if (wrapAround) 
      {
        sprite_ptr->left = sprite_ptr->maxX;  
      }
      else 
      {
        sprite_ptr->left = sprite_ptr->minX;  
      }
      stopReached = true; 
    }
    
    if (sprite_ptr->left > sprite_ptr->maxX)
    {
      if (wrapAround) 
      {
        sprite_ptr->left = sprite_ptr->minX;  
      }   
      else          
      {
        sprite_ptr->left = sprite_ptr->maxX;  
      }
      stopReached = true; 
    }

    sprite_ptr->top -= incY;  //Bigger Y values are on the bottom, subtracting makes it seem like they are on the top
    if (sprite_ptr->top < sprite_ptr->minY) 
    {
      if (wrapAround) 
      {
        sprite_ptr->top = sprite_ptr->maxY;   
      }
      else 
      {
        sprite_ptr->top = sprite_ptr->minY;
      }
      stopReached = true; 
    }
    
    if (sprite_ptr->top > sprite_ptr->maxY) 
    {
      if (wrapAround) 
      {
        sprite_ptr->top = sprite_ptr->minY; 
      }
      else 
      {
        sprite_ptr->top = sprite_ptr->maxY;  
      }
      stopReached = true; 
    }

    //===================================================== UPDATE BEHAVIOR =====================================================
    if (stopReached)
    {
      // we need to move, so look at behavior
      switch(sprite_ptr->behavior)
      {
        case BEHAVE_CIRCLE_CW:
          switch(sprite_ptr->behaveState)
          {
            case BEHAVE_STATE_RT:
              sprite_ptr->behaveState = BEHAVE_STATE_DN;
            break;
            case BEHAVE_STATE_DN:
              sprite_ptr->behaveState = BEHAVE_STATE_LT;
            break;            
            case BEHAVE_STATE_LT:
              sprite_ptr->behaveState = BEHAVE_STATE_UP;
            break;
            case BEHAVE_STATE_UP:
              sprite_ptr->behaveState = BEHAVE_STATE_RT;
            break;
          }
        break;

        case BEHAVE_CIRCLE_CCW:      
          switch(sprite_ptr->behaveState)
          {
            case BEHAVE_STATE_LT:
              sprite_ptr->behaveState = BEHAVE_STATE_DN;
            break;
            case BEHAVE_STATE_DN:
              sprite_ptr->behaveState = BEHAVE_STATE_RT;
            break;
            case BEHAVE_STATE_RT:
              sprite_ptr->behaveState = BEHAVE_STATE_UP;
            break;            
            case BEHAVE_STATE_UP:
              sprite_ptr->behaveState = BEHAVE_STATE_LT;
            break;
          }
        break;
      }    
    }
  }

  if ((oldLeft != sprite_ptr->left) || (oldTop != sprite_ptr->top) || (oldBitMap != sprite_ptr->curBitMap))
  {
    replaceBackGround(oldLeft, oldTop, sprite_ptr->Array[oldBitMap]->width, sprite_ptr->Array[oldBitMap]->height, CurTile->BCKGND_ptr);

    drawBitMap(sprite_ptr->left, sprite_ptr->top, sprite_ptr->Array[sprite_ptr->curBitMap], false);
  }
}

void newTile(TILE *tile)
{
  CurTile = tile;
  drawBitMap(0, 0, tile->BCKGND_ptr, true);
}

void drawBitMap(signed char left, signed char top, const BITMAP *bmp, bool ignoreInvisible)
{
  signed char X, Y;
  unsigned char I, J;  
  unsigned char color8;

  for (I = 0; I < bmp->width; I++)
  {
    X = left + I;
    if ((X >= 0) && (X < COMP_X))
    {
      for (J = 0; J < bmp->height; J++)  
      {
        Y = top + J;
        if ((Y >= 0) && (Y < COMP_Y))
        {
          switch(bmp->attributes & BMP_ATTR_DRAW_DIR_MASK)
          {
            case BMP_ATTR_DRAW_DIR_UP:
              color8 = pgm_read_byte_near(bmp->BMP_ptr + (I * bmp->height) + J);
            break;

            case BMP_ATTR_DRAW_DIR_CW:
              color8 = pgm_read_byte_near(bmp->BMP_ptr + (J * bmp->height) + (bmp->width - 1 - I));
            break;

            case BMP_ATTR_DRAW_DIR_DN:
              color8 = pgm_read_byte_near(bmp->BMP_ptr + ((bmp->width - 1 - I) * bmp->height) + (bmp->height - 1 - J));
            break;

            case BMP_ATTR_DRAW_DIR_CCW:
              color8 = pgm_read_byte_near(bmp->BMP_ptr + ((bmp->height - 1 - J) * bmp->height) + I);
            break;
          }
          if ((color8 != bmp->invisible) || ignoreInvisible || ((bmp->attributes & BMP_ATTR_NO_INVISIBLE) == BMP_ATTR_NO_INVISIBLE))
          {
            drawPixel(X, Y, color8); 
          }
        }
      }
    }
  }
}

void replaceBackGround(signed char left, signed char top, unsigned char width, unsigned char height, const BITMAP *BackGroundPtr)
{
  signed char X, Y;
  unsigned char I, J;  
  unsigned char color8;

  for (I = 0; I < width; I++)
  {
    X = left + I;
    if ((X >= 0) && (X < COMP_X))
    {
      for (J = 0; J < height; J++)  
      {
        Y = top + J;
        if ((Y >= 0) && (Y < COMP_Y))
        {
          color8 = pgm_read_byte_near(BackGroundPtr->BMP_ptr + (X * BackGroundPtr->height) + Y);
          drawPixel(X, Y, color8); 
        }
      }
    }
  }
}
